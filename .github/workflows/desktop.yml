name: Desktop Multi-Platform Release
on: [workflow_dispatch]
  # push:
  #   branches:
  #   - main

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    timeout-minutes: 40
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
          cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Set Path Variables for macOS and Linux
        if: runner.os != 'Windows'
        id: path_variables
        run: |
          tag=$(git describe --tags --abbrev=0 --match "*-desktop")
          version=$(echo "$tag" | sed 's/-desktop$//')
          if [[ "${{ matrix.os }}" == 'macos-latest' ]]; then
            name="io.github.thegbguy.timedifferencecalculator-${version}.dmg"
            path="composeApp/build/release/main-release/dmg/${name}"
          else
            name="io.github.thegbguy.timedifferencecalculator-${version}.deb"
            path="composeApp/build/release/main-release/deb/${name}"
          fi
          echo "TAG=$tag" >> $GITHUB_ENV
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "RELEASE_PATH=$path" >> $GITHUB_ENV

      - name: Set Path Variables for Windows
        if: runner.os == 'Windows'
        id: path_variables
        run: |
          $tag = $(git describe --tags --abbrev=0 --match "*-desktop")
          $version = $tag -replace '-desktop$', ''
          $name = "io.github.thegbguy.timedifferencecalculator-${version}.exe"
          $path = "composeApp/build/release/main-release/exe/${name}"
          echo "TAG=$tag" >> $env:GITHUB_ENV
          echo "VERSION=$version" >> $env:GITHUB_ENV
          echo "RELEASE_PATH=$path" >> $env:GITHUB_ENV

      - name: Build Package for macOS
        if: runner.os == 'macOS'
        run: ./gradlew packageReleaseDmg

      - name: Build Package for Windows
        if: runner.os == 'Windows'
        run: ./gradlew packageReleaseExe

      - name: Build Package for Linux
        if: runner.os == 'Linux'
        run: ./gradlew packageReleaseDeb

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/compose/logs/*

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.RELEASE_PATH }}
          tag: ${{ env.TAG }}
          overwrite: true
          draft: true
          body: "Release ${{ env.VERSION }} for ${{ matrix.os }}"
